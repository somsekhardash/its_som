# name: CICD
# on:
#   push:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout the source code
#         uses: actions/checkout@v3
#       - name: Login to docker hub
#         run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} 
#       - name: Build Docker Image
#         run: docker build -t  dashsomsekhar/pwsite . 
#       - name: Publish the image into docker hub
#         run: docker push dashsomsekhar/pwsite:latest
  
#   deploy:
#     needs: build
#     runs-on: self-hosted
#     steps:
#       - name: Pull the image from docker hub
#         run: docker pull dashsomsekhar/pwsite:latest
#       - name: Delete the old container
#         run: docker rm -f theContainer
#       - name: Run the docker container
#         run: docker run --init -p 5000:5000 -d --name theContainer dashsomsekhar/pwsite:latest



on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: show sec key
        run: echo '${{ secrets.SECRET_KEY }}'
      - name: create .env
        run: |
          touch .env
          echo ABOUT_URL="https://api.jsonbin.io/v3/b/64d3e2449d312622a38ea132" >> .env
          echo EDUCATION_URL="https://api.jsonbin.io/v3/b/60af4ee1a5cd4a5576a85db8" >> .env
          echo EXPERIENCE_URL="https://api.jsonbin.io/v3/b/60af4f00d0f4985540525fd3" >> .env
          echo SKILLS_URL="https://api.jsonbin.io/v3/b/60af4f23d0f4985540525fea" >> .env
          echo SITE_URL="https://api.jsonbin.io/v3/b/60af4f41a5cd4a5576a85dfd" >> .env
          echo CONTACT_URL="https://api.jsonbin.io/v3/b/60af4f65a5cd4a5576a85e10" >> .env
          echo SECRET_KEY= ${{ secrets.SECRET_KEY }} >> .env
          cat .env
      - name: remove node_modules
        run: rm -rf node_modules/
      - name: Install dependencies
        run: npm ci
      - name: Build app
        run: npm run build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy app build to S3 bucket
        run: aws s3 sync ./dist/ s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete



      



      
